import jvm
import bibix
import maven
import file
// 여기서 ktjvm은 기존에 빌드되어 있는 플러그인을 사용해야하기 때문에 from ".."가 아니라 from bibix.plugins
from bibix.plugins import ktjvm
from bibix.plugins import jar
import "../pluginBase" as pluginBase

var srcVersion: string = "17"
var outVersion: string = "17"

prepareBibixBase = bibix.base

implBuilder = ktjvm.library(
  srcs = [pluginBase.jvmTypes] + glob("src/**/*.kt"),
  deps = [bibix.base],
)

action buildImpl {
  file.copyFile(jar.jar([implBuilder], "bibix-java-plugin.jar"), "build")
}

// bibix-java-plugin.jar must be compiled manually (by running buildImpl)
impl = jvm.lib("build/bibix-java-plugin.jar", deps=[bibix.base])

def library(
  srcs: set<file>,
  deps: set<jvm.ClassPkg> = [],
  runtimeDeps: set<jvm.ClassPkg> = [],
  resources: set<file> = [],
  compilerPath: string = "javac",
  srcVersion: string = srcVersion,
  outVersion: string = outVersion,
): jvm.ClassPkg = impl:com.giyeok.bibix.plugins.java.Library

action def test(
  srcs: set<file>,
  deps: set<jvm.ClassPkg> = [],
) = impl:com.giyeok.bibix.plugins.java.Test

action def execute(
  deps: set<jvm.ClassPkg>,
  mainClass: string,
) = impl:com.giyeok.bibix.plugins.java.Execute

